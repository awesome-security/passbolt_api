language: php

addons:
  apt:
    packages: &default_packages
    - libgpgme11-dev
    - php5-memcached
    - php5-common
    - php5-curl
    - php5-mcrypt
    - php5-mysql
    - gnupg2

services:
  - memcached

matrix:
   include:
     - php: 5.5
       env: DB=mysql MYSQL_SERVER_VERSION=5.5
       dist: trusty
       sudo: required
       before_install:
         - sudo apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" install mysql-server-5.5 mysql-server-core-5.5 mysql-client-5.5
     - php: 5.6
       env: DB=mysql MYSQL_SERVER_VERSION=5.6
       dist: trusty
       sudo: required
       before_install:
         - sudo apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" install mysql-server-5.6 mysql-server-core-5.6 mysql-client-5.6
#       addons:
#         apt:
#           packages:
#             - *default_packages
#             - mysql-server-5.6
#     - php: 7
#       env: DB=mysql MYSQL_SERVER_VERSION=5.6
#       dist: trusty
#       sudo: required
#       before_install:
#         - sudo service mysql stop
#         - sudo rm -rf /var/lib/mysql
#         - sudo apt-get remove --purge mysql-server mysql-server-core mysql-client
#         - sudo apt-get autoremove
#         - sudo apt-get autoclean
#         - sudo apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" install mysql-server-5.6 mysql-server-core-5.6 mysql-client-5.6
#         - sudo service mysql start

before_script:
  - wget http://getcomposer.org/composer.phar
  - php composer.phar install --dev --no-interaction
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE passbolt;'; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE passbolt_test;'; fi"
  - chmod -R 777 ./app/tmp
  - if [[ ${TRAVIS_PHP_VERSION:0:3} == "5.3" ]] ; then pecl install timezonedb ; fi
  - sh -c "if [ '$PHPCS' = '1' ]; then composer global require 'cakephp/cakephp-codesniffer:1.*'; fi"
  - sh -c "if [ '$PHPCS' = '1' ]; then ~/.composer/vendor/bin/phpcs --config-set installed_paths ~/.composer/vendor/cakephp/cakephp-codesniffer; fi"
  - echo yes | pecl install gnupg
  - echo "extension = memcached.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - if [[ ${TRAVIS_PHP_VERSION:0:3} == "7.0" ]] ; then print "yes" | pecl install apcu-5.1.3; else print "yes" | pecl install apcu-4.0.11; fi
  - echo -e "extension = apcu.so\napc.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - phpenv rehash
  - set +H
  - echo "<?php
    class DATABASE_CONFIG {
      public \$default = array(
        'datasource' => 'Database/Mysql',
        'database' => 'passbolt',
        'host' => '127.0.0.1',
        'login' => 'root',
        'password' => '',
        'persistent' => false,
      );
      public \$test = array(
        'datasource' => 'Database/Mysql',
        'database' => 'passbolt_test',
        'host' => '127.0.0.1',
        'login' => 'root',
        'password' => '',
        'persistent' => false,
      );
    }" > app/Config/database.php
  - cp app/Config/core.php.default app/Config/core.php
  - cp app/Config/email.php.default app/Config/email.php
  - sed -i "s/('debug',\s0)/('debug', 2)/" ./app/Config/core.php
  - sed -i "s/DYhG93b0qyJfIxfs2guVoUubWwvniR2G0FgaC9mi/DYhG93b0qyJfIxfs2guVoUubWwvniR2G0FgbC9mi/" ./app/Config/core.php
  - sed -i "s/76859309657453542496749683645/76859309357453542496749683645/" ./app/Config/core.php
  - sed -i "s/\/\/Configure::write('App.fullBaseUrl',\s'http:\/\/example.com');/Configure::write('App.fullBaseUrl', 'http:\/\/127.0.0.1');/" ./app/Config/core.php
  - sed -i "s/\/\/date_default_timezone_set('UTC');/date_default_timezone_set('UTC');/" ./app/Config/core.php
  - echo "<?php
    \$config = array(
      'App' => array(
        'ssl' => array(
          'force' => false,
        ),
        'registration' => array(
          'public' => true,
        ),
        'selenium' => array(
          'active' => true,
        ),
      ),
      'GPG' => array(
        'env' => array(
          'setenv' => true,
          'home'   => '/home/travis/.gnupg',
        ),
      ),
    );" > app/Config/app.php

script:
  - mkdir -p build/logs
  - app/Console/cake test app All --stderr --coverage-clover build/logs/clover.xml --configuration=app/Test/phpunit.xml --filter=AuthControllerTest

#after_script:
#  - php Vendor/bin/coveralls -v

notifications:
  email: false
